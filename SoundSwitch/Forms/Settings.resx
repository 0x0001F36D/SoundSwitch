<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Lf4D8H2E+tjeL1AAAAAASUVORK5CYII=
</value>
  </data>
</root>