<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>